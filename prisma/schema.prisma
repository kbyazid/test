generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
  engineType = "library"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model test_connection {
  id      Int     @id @default(autoincrement())
  message String? @db.VarChar(255)
}

model budget {
  id          String         @id @default(uuid())
  name        String
  amount      Float
  userId      String
  emoji       String?
  createdAt   DateTime      @default(now())
  user        user          @relation(fields: [userId], references: [id], map: "Budget_userId_fkey")
  transaction transaction[]

  @@index([userId], map: "Budget_userId_fkey")
}

model transaction {
  id          String            @id @default(uuid())
  description String
  amount      Float
  budgetId    String?
  emoji       String?
  createdAt   DateTime         @default(now())
  type        transaction_type
  userId      String
  budget      budget?          @relation(fields: [budgetId], references: [id], map: "Transaction_budgetId_fkey")
  user        user             @relation(fields: [userId], references: [id], map: "Transaction_userId_fkey")

  @@index([budgetId], map: "Transaction_budgetId_fkey")
  @@index([userId], map: "Transaction_userId_fkey")
}

model user {
  id          String        @id @default(uuid())
  email       String        @unique(map: "User_email_key")
  role        Role          @default(USER)   // ðŸ‘ˆ enum
  status      Boolean       @default(false)   // actif/inactif
  createdAt   DateTime      @default(now())
  budget      budget[]
  transaction transaction[]
}

enum transaction_type {
  income
  expense
}

enum Role {
  ADMIN
  USER
}